---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import { getImagePath } from "../utils/image";
import { resolveArtworkImage } from "../utils/image";

interface Props {
  id: string;
  data: CollectionEntry<"artworks">["data"];
}

const { id, data } = Astro.props;
const { title, description, image } = data;

// Fallback title if not provided
const displayTitle = title || `Artwork ${id}`;
// Fallback description if not provided
const displayDescription = description || `${data.size} - ${data.color}`;
const imagePath = getImagePath(data.image);
---

<a href={`/artworks/${id}`} class="artwork glass-card">
  <div class="artwork-inner">
    <div class="artwork-image-container">
      <Image
        src={imagePath}
        width="400"
        height="400"
        alt={data.title || `Artwork ${id}`}
        loading="lazy"
        format="webp"
        quality={80}
      />
    </div>
    <div class="artwork-info">
      <h3>{displayTitle}</h3>
      <p>{displayDescription}</p>
      <!-- <div class="artwork-meta">
        <span class="size">{data.size}</span>
        <span class="color" style={`--artwork-color: ${data.color}`}>{data.color}</span>
      </div> -->
    </div>
    <div class="artwork-overlay"></div>
  </div>
</a>

<style>
  .artwork {
    position: relative;
    aspect-ratio: 1;
    overflow: hidden;
    border-radius: 20px;
    cursor: pointer;
    perspective: 1500px;
    text-decoration: none;
    display: block;
    transform: translateZ(0);
  }

  .artwork-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transition: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .artwork:hover .artwork-inner {
    transform: rotateY(12deg) rotateX(8deg) translateZ(20px);
  }

  .artwork-image-container {
    position: absolute;
    inset: 0;
    overflow: hidden;
  }

  .artwork img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transform: scale(1.05);
    transition: transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
    will-change: transform;
  }

  .artwork:hover img {
    transform: scale(1.12);
  }

  .artwork-overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(
      45deg,
      rgba(var(--quantum-red-rgb), 0.15),
      rgba(var(--quantum-blue-rgb), 0.15)
    );
    opacity: 0;
    transition: opacity 0.4s ease;
    pointer-events: none;
  }

  .artwork:hover .artwork-overlay {
    opacity: 1;
  }

  .artwork-info {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 2rem;
    background: linear-gradient(transparent, rgba(0, 0, 0, 0.85));
    transform: translateY(100%);
    transition: transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
    z-index: 1;
  }

  .artwork:hover .artwork-info {
    transform: translateY(0);
  }

  h3 {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
    background: linear-gradient(
      45deg,
      var(--quantum-white),
      var(--quantum-blue)
    );
    -webkit-background-clip: text;
    color: transparent;
  }

  p {
    color: var(--quantum-white);
    opacity: 0.8;
  }
</style>
