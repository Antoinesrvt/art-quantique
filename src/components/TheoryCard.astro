---
import type { Theory } from '../data/theories';

interface Props extends Theory {}

const { title, description, color } = Astro.props;
---

<div class="theory-card glass-card">
  <div class="theory-content">
    <h3 style={`--theory-color: ${color}`}>{title}</h3>
    <p>{description}</p>
  </div>
  <div class="theory-particles"></div>
</div>

<style>
  .theory-card {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    position: relative;
    overflow: hidden;
  }

  .theory-content {
    position: relative;
    z-index: 1;
  }

  h3 {
    margin-bottom: 1rem;
    font-size: 1.5rem;
    background: linear-gradient(45deg, var(--theory-color), var(--quantum-blue));
    -webkit-background-clip: text;
    color: transparent;
    transition: transform 0.3s ease;
  }

  p {
    color: var(--quantum-white);
    opacity: 0.8;
    transition: transform 0.3s ease;
    line-height: 1.6;
  }

  .theory-particles {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.5s ease;
    background: radial-gradient(
      circle at var(--x, 50%) var(--y, 50%),
      rgba(var(--quantum-blue-rgb), 0.2) 0%,
      transparent 50%
    );
  }

  .theory-card:hover .theory-particles {
    opacity: 1;
  }

  .theory-card:hover h3 {
    transform: translateY(-5px);
  }

  .theory-card:hover p {
    transform: translateY(5px);
  }
</style>

<script>
  const cards = document.querySelectorAll('.theory-card');
  
  cards.forEach(card => {
    const particles = card.querySelector('.theory-particles');
    
    card.addEventListener('mousemove', (e) => {
      const rect = card.getBoundingClientRect();
      const x = ((e.clientX - rect.left) / rect.width) * 100;
      const y = ((e.clientY - rect.top) / rect.height) * 100;
      
      particles.style.setProperty('--x', `${x}%`);
      particles.style.setProperty('--y', `${y}%`);
    });
  });
</script>